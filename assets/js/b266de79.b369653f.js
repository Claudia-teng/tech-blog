"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[518],{4369:n=>{n.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"dsa-javascript-hash-table","metadata":{"permalink":"/dsa-javascript-hash-table","source":"@site/blog/2022-04-01-dsa-javascript-hash-table/2022-04-01-dsa-javascript-hash-table.md","title":"\u863f\u8514\u8207\u5751 \u2014\u2014 JavaScript \u7684 Hash Table \u662f\u4ec0\u9ebc\uff1f","description":"\u6b64\u7bc7\u70ba Udemy - Master the Coding Interview: Data Structures + Algorithms","date":"2022-04-01T00:00:00.000Z","tags":[{"inline":false,"label":"Data Structure and Algorithm","permalink":"/tags/data-structure-and-algorithm","description":"Data Structure and Algorithm"}],"readingTime":6.41,"hasTruncateMarker":true,"authors":[{"name":"Claudia Teng","title":"Author","imageURL":"https://github.com/Claudia-teng.png","key":"claudia","page":null}],"frontMatter":{"slug":"dsa-javascript-hash-table","title":"\u863f\u8514\u8207\u5751 \u2014\u2014 JavaScript \u7684 Hash Table \u662f\u4ec0\u9ebc\uff1f","authors":["claudia"],"tags":["dsa"]},"unlisted":false,"nextItem":{"title":"\u7528 JavaScript \u5be6\u4f5c Array \u8cc7\u6599\u7d50\u69cb","permalink":"/dsa-javascript-array"}},"content":"\u6b64\u7bc7\u70ba [Udemy - Master the Coding Interview: Data Structures + Algorithms](https://udemy.com/course/master-the-coding-interview-data-structures-algorithms/?srsltid=AfmBOooCR7IyhxoDQK1cx6-Q*sh7WOI7Q3Z1LnW005R5rxfs5cmnDXo*)\\n\u8ab2\u7a0b\u7b46\u8a18\u3002\\n\\n\u4e0a\u7bc7\u4ecb\u7d39\u4e86\u5982\u4f55\u7528 JavaScript \u7684 Object\uff0c\u5be6\u4f5c Array \u7684\u8cc7\u6599\u7d50\u69cb\uff0c\u9019\u7bc7\u5247\u8981\u4f86\u89e3\u91cb JavaScript \u6700\u6838\u5fc3\u7684\u6982\u5ff5\u2014\u2014\u7269\u4ef6\uff08Object\uff09\u3002\\n\\n\u8b1b\u5230 JavaScript \u7576\u4e2d\u7684\u7269\u4ef6\uff0c\u4f60\u53ef\u80fd\u6703\u60f3\u5230\u7684\u662f\u50cf\u4ee5\u4e0b\u7684\u8cc7\u6599\u7d50\u69cb\uff1a\\n\\n```jsx\\nlet user = {\\n  id: 1,\\n  name: \\"John Doe\\",\\n  age: 20,\\n};\\n```\\n\\n\u7531\u6b64\u53ef\u4ee5\u770b\u51fa Object \u662f\u7531`key: value`\u7d44\u6210\uff0c\u90a3\u5728 RAM \u7576\u4e2d\uff0c\u4ed6\u53c8\u662f\u600e\u9ebc\u88ab\u5132\u5b58\u7684\uff1f\u9019\u6642\u6211\u5011\u5fc5\u9808\u8981\u4e86\u89e3 Hash Tables \u7684\u8cc7\u6599\u7d50\u69cb\u3002\\n\\n\x3c!-- truncate --\x3e\\n\\n### Hash Tables\\n\\n![Hash Table 1](./hash-table-1.png)\\n\\nHash Tables \u5728\u4e0d\u540c\u8a9e\u8a00\u7576\u4e2d\uff0c\u6709\u4e0d\u540c\u7684\u5be6\u73fe\u65b9\u5f0f\uff0c\u800c\u5728 JavaScript \u7576\u4e2d\uff0cHash Tables \u9019\u500b\u8cc7\u6599\u7d50\u69cb\u5c31\u662f\u4ee5 Object \u7684\u65b9\u5f0f\u5448\u73fe\u3002\\n\\nHash Tables \u7684\u904b\u4f5c\u65b9\u5f0f\uff0c\u53ef\u4ee5\u628a\u4ed6\u60f3\u6210\uff0c\u5047\u8a2d\u6211\u6709\u4e00\u584a\u7a7a\u5730\u3002\u9019\u584a\u7a7a\u5730\u4e0a\u6709 100 \u500b\u5751\u3002\u800c\u6211\u624b\u4e0a\u525b\u597d\u6709 10 \u500b\u863f\u8514\uff0c\u73fe\u5728\u6211\u8981\u628a\u9019 10 \u500b\u863f\u8514\u653e\u9032\u53bb\u9019\u4e9b\u5751\u88e1\u9762\u3002\\n\\n\u90a3\u554f\u984c\u4f86\u4e86\uff0c\u6211\u8981\u600e\u9ebc\u6c7a\u5b9a\u54ea\u500b\u863f\u8514\u653e\u9032\u54ea\u500b\u5751\u88e1\u9762\uff1f\\n\\n\u9019\u6642\u6211\u6c7a\u5b9a\u7528\u4e00\u500b\u8f49\u76e4\uff0c\u7576\u8f49\u76e4\u8f49\u5230 2\uff0c\u6211\u5c31\u628a\u7b2c\u4e00\u500b\u863f\u8514\u653e\u5728 2 \u865f\u5751\uff0c\u7576\u8f49\u76e4\u8f49\u5230 78\uff0c\u6211\u5c31\u628a\u7b2c\u4e8c\u500b\u863f\u8514\u653e\u5230 78 \u865f\u5751\u3002\\n\\n\u6c92\u932f\uff0c\u770b\u5230\u9019\u88e1\uff0c\u4f60\u5df2\u7d93\u5b78\u6703 Hash Tables \u7684\u904b\u4f5c\u65b9\u5f0f\u4e86\u3002\\n\\n\u6211\u5011\u53ef\u4ee5\u628a\u90a3\u584a\u300c\u7a7a\u5730\u300d\u60f3\u6210\u8a18\u61b6\u9ad4\uff0c\u300c\u5751\u300d\u60f3\u6210\u8a18\u61b6\u9ad4\u4f4d\u5740\uff0c\u300c\u863f\u8514\u300d\u60f3\u6210\u8cc7\u6599\uff0c\u800c\u8f49\u76e4\u60f3\u6210 hash function\u3002\u7576\u6211\u60f3\u628a\u4e00\u5c0d`key: value`\u585e\u9032\u53bb\u8a18\u61b6\u9ad4\u6642\uff0c\u6703\u5c07 key \u653e\u9032 hash function\uff0c\u9032\u800c\u5f97\u51fa\u6211\u60f3\u8981\u628a\u9019\u500b\u8cc7\u6599\u653e\u5728\u54ea\u4e00\u500b\u8a18\u61b6\u9ad4\u4f4d\u5740\u3002\\n\\n\u4f46\u662f\uff0c\u7576\u6211\u7b2c\u4e00\u500b\u8f49\u76e4\u8f49\u5230 2 \u7684\u6642\u5019\uff0c\u6211\u628a\u863f\u8514\u653e\u5230 2 \u865f\u5751\uff0c\u90a3\u6211\u4e0b\u4e00\u6b21\u8f49\u76e4\u4e5f\u8f49\u5230 2 \u7684\u6642\u5019\uff0c\u6211\u7684\u863f\u8514\u9084\u662f\u653e\u5728 2 \u865f\u5751\u55ce\uff1f\\n\\n\u9019\u5c31\u662f hash collision\uff0c\u5728 JavaScript \u88e1\uff0c\u7576\u9047\u5230\u9019\u7a2e\u60c5\u6cc1\u7684\u6642\u5019\uff0c\u7b54\u6848\u662f\u300c\u662f\u300d\uff0c\u4ed6\u53ef\u4ee5\u653e\u5728\u540c\u4e00\u500b\u5751\u88e1\u3002\u4e26\u4e14\u6703\u7528 Linked List \u7684\u65b9\u5f0f\u5b58\u5728\u9019\u500b\u8a18\u61b6\u9ad4\u4f4d\u5740\u3002\\n\\n![Hash Table 2](./hash-table-2.png)\\n\\n\u4e0d\u904e\uff0c\u9019\u4e9b hash function \u548c hash collision \u9047\u5230\u7684\u554f\u984c\uff0c\u5176\u5be6\u8a9e\u8a00\u672c\u8eab\u90fd\u5df2\u7d93\u5e6b\u6211\u5011\u8655\u7406\u597d\u4e86\uff0c\u6240\u4ee5\u6211\u5011\u5e73\u5e38\u5728 coding \u7684\u6642\u5019\uff0c\u4e0d\u6703\u9047\u5230\u9019\u4e9b\u554f\u984c\u3002\\n\\n### Implementation\\n\\n\u63a5\u4e0b\u4f86\u6211\u5011\u4e5f\u8981\u4f86\u6311\u6230\uff0c\u7528 JavaScript \u4f86\u5be6\u4f5c\u4e00\u500b Hash Tables \u7684 Class\u3002\\n\\n\u9996\u5148\u5728 constructor \u88e1\u9762\uff0c\u5efa\u7acb\u4e00\u500b data \u8b8a\u6578\uff0c\u4e26\u53ef\u4ee5\u50b3\u5165 size \u4f86\u6c7a\u5b9a\u9019\u500b hash table \u7684\u5927\u5c0f\u3002\\n\\n```jsx\\nclass HashTables {\\n  constructor(size) {\\n    this.data = new Array(size);\\n  }\\n}\\n```\\n\\n\u63a5\u8457\u6211\u5011\u8981\u5728 Class \u4e2d\u65b0\u589e hash function\uff0c\u9019\u500b function \u6703\u63a5\u6536 key \u503c\uff0c\u4e26\u6c7a\u5b9a\u8981\u5c07\u9019\u500b\u8cc7\u6599\u653e\u5728 hash table \u7684\u54ea\u4e00\u500b\u4f4d\u5740\u3002\\n\\n```jsx\\n_hash(key) {\\n  let hash = 0;\\n  for (let i = 0; i < key.length; i++) {\\n    hash += key.charCodeAt(i);\\n  }\\n  return hash % this.table.length;\\n}\\n```\\n\\n\u5728\u9019\u88e1\u8b93\u50b3\u9032\u4f86\u7684 key \u7576\u4e2d\u7684\u6bcf\u4e00\u500b\u5b57\u6bcd\u8dd1\u8ff4\u5708\uff0c\u900f\u904e`charCodeAt()`\u8f49\u6210\u6578\u5b57\u5f8c\u4e26\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u5f97\u51fa\u90a3\u500b key \u7684 hash\u3002\\n\\n\u5047\u5982\u6211\u60f3\u8981\u5b58\u4e00\u500b`apple: 500`\u7684\u8cc7\u6599\uff0c`apple`\u9019\u500b key \u5c31\u6703\u7d93\u904e function \u5f8c\u5f97\u51fa\u4e00\u500b hash\u3002\u6700\u5f8c\u9700\u8981`hash`\u9664\u4ee5`this.table.length`\u7684\u9918\u6578\uff0c\u662f\u70ba\u4e86\u78ba\u4fdd\u9019\u500b hash \u503c\u662f\u843d\u5728\u6211\u64c1\u6709\u7684\u8a18\u61b6\u9ad4\u4f4d\u5740\u7bc4\u570d\u88e1\u9762\u3002\\n\\n\u6bd4\u5982 hash = 102 \u6642\uff0c\u6211\u7684 hash table \u53ea\u6709 100 \u500b\u4f4d\u5740\uff0c\u56e0\u6b64\u6211\u7528 102 % 100 = 2 \u7684\u65b9\u5f0f\uff0c\u6c7a\u5b9a\u5c07\u9019\u500b\u8cc7\u6599\u653e\u5728 2 \u865f\u5751\u3002\u800c`_hash`\u6703\u52a0\u5e95\u7dda\u662f\u70ba\u4e86\u8868\u660e\u9019\u662f\u4e00\u500b private function\u3002\\n\\n\u63a5\u4e0b\u4f86\u7e7c\u7e8c\u52a0\u4e0a\u4e00\u4e9b\u57fa\u672c\u7684 Object \u80fd\u4f7f\u7528\u7684 method\uff1a\\n\\n### Set\\n\\n\u9996\u5148\uff0c\u8981 set \u4e00\u500b\u8cc7\u6599\u5230 hash table \u88e1\u9762\uff0c\u5fc5\u9808\u5c07\u50b3\u9032\u4f86\u7684 key \u7d93\u904e hash function \u5f97\u5230\u5230\u653e\u9032\u53bb\u7684\u4f4d\u5740\u3002\u63a5\u8457\u5728\u9019\u500b\u4f4d\u5740\u585e\u9032\u4e00\u500b\u7a7a\u9663\u5217\uff08\u6b64\u8655\u4ee5 Array \u70ba\u793a\u7bc4\uff0c\u800c\u975e Linked List\uff09\u3002\\n\\n\u9019\u500b\u7a7a\u9663\u5217\u5c31\u662f\u525b\u525b\u6240\u8aaa\u7684\u300c\u5751\u300d\uff0cpush \u5c31\u662f\u5c07\u863f\u8514\u585e\u9032\u53bb\u5751\u7684\u52d5\u4f5c\uff0c\u6700\u5f8c\u56de\u50b3\u9019\u500b hash table\u3002\\n\\n```jsx\\nset(key, value) {\\n  let address = this._hash(key);\\n  if (!this.data[address]) {\\n    this.data[address] = [];\\n  }\\n  this.data[address].push([key, value]);\\n  return this.data;\\n}\\n```\\n\\n**Big O: O(1)**\\n\\n\u85c9\u7531 Hash \u5c31\u80fd\u5feb\u901f\u65b0\u589e key: value\\n\\n### Get\\n\\n\u63a5\u8457\u8981\u5be6\u4f5c`get()`\uff0c\u9996\u5148\u53ef\u4ee5\u5f9e key \u627e\u5230\u5c0d\u61c9\u7684 hash \u4f4d\u5740\uff0c\u5f97\u5230\u5c0d\u61c9\u7684\u300c\u5751\u300d\uff08\u9663\u5217\uff09\u7684\u8cc7\u6599\u3002\\n\\n\u4f46\u56e0\u70ba\u9019\u500b\u300c\u5751\u300d\uff08\u9663\u5217\uff09\u53ef\u80fd\u4e0d\u53ea\u4e00\u500b\u8cc7\u6599\uff0c\u6240\u4ee5\u8981\u7528\u8ff4\u5708\u53bb\u6bd4\u5c0d\u4e00\u6a23\u7684 key\uff0c\u5c31\u53ef\u4ee5\u627e\u5230 key \u5c0d\u61c9\u7684 value\u3002\u82e5\u627e\u4e0d\u5230\u5247\u56de\u50b3 undefined\u3002\\n\\n```jsx\\nget(key) {\\n  const address = this._hash(key);\\n  const currentBucket = this.data[address];\\n  if (currentBucket) {\\n    for (let i = 0; i < currentBucket.length; i++) {\\n      if (currentBucket[i][0] === key) {\\n        return currentBucket[i][1]\\n      }\\n    }\\n  }\\n  return undefined;\\n}\\n```\\n\\n**Big O: O(1)**\\n\\n\u5927\u90e8\u5206\u7684\u60c5\u6cc1\u4e0b\uff0c\u6c92\u6709 hash collision\uff0c\u4e00\u500b address \u53ea\u6709\u4e00\u500b key: value\uff0cBig O \u70ba O(1)\uff0c\u85c9\u7531 Hash \u5c31\u80fd\u5feb\u901f\u5b9a\u4f4d\u8981\u627e\u8cc7\u6599\u3002\\n\\n\u82e5\u6709 hash collision\uff0c\u5c31\u5fc5\u9808\u8dd1\u8ff4\u5708\uff0cBig O: O(n)\\n\\n### Keys\\n\\n`Object.keys()`\u53ef\u4ee5\u7528\u4f86\u53d6\u5f97 Object \u6240\u6709\u7684 key\u3002\\n\\n\u9019\u88e1\u6211\u5011\u5047\u8a2d\u6bcf\u4e00\u500b\u5751\u90fd\u53ea\u6709\u4e00\u500b\u863f\u8514\u7684\u60c5\u6cc1\uff0c\u5c07 this.data \u8dd1\u8ff4\u5708\uff0c\u53bb\u6aa2\u67e5\u662f\u5426\u6240\u6709\u7684 hash \u4f4d\u5740\u90fd\u6709\u6771\u897f\u3002\\n\\n\u5982\u679c\u6709\u6771\u897f\uff0c\u6211\u8981\u53bb\u53d6\u5f97\u9019\u500b\u300c\u5751\u300d\uff08\u9663\u5217\uff09\u88e1\u9762\u7684 key\u3002\\n\\n```jsx\\nkeys(){\\n  const keysArray = [];\\n  console.log(this.data.length);\\n  for (let i = 0; i < this.data.length; i++){\\n    if(this.data[i]){\\n      // \u7b2c i \u865f\u7684\u5751\u7684\u7b2c\u4e00\u500b pair\\n      keysArray.push(this.data[i][0][0])\\n    }\\n  }\\n  return keysArray;\\n}\\n\\n```\\n\\n**Big O: O(n)**\\n\\n\u9700\u5c07 this.data \u8dd1\u8ff4\u5708\uff0c\u53bb\u6aa2\u67e5\u662f\u5426\u6240\u6709\u7684 hash \u4f4d\u5740\u90fd\u6709\u6771\u897f\u3002\\n\\n\u5168\u90e8\u7684 Class \u770b\u8d77\u4f86\u50cf\u9019\u6a23\uff1a\\n\\n```jsx\\nclass HashTable {\\n  constructor(size) {\\n    this.data = new Array(size);\\n  }\\n\\n  _hash(key) {\\n    let hash = 0;\\n    for (let i = 0; i < key.length; i++) {\\n      hash = (hash + key.charCodeAt(i) * i) % this.data.length;\\n    }\\n    return hash;\\n  }\\n\\n  set(key, value) {\\n    let address = this._hash(key);\\n    if (!this.data[address]) {\\n      this.data[address] = [];\\n    }\\n    this.data[address].push([key, value]);\\n    return this.data;\\n  }\\n\\n  get(key) {\\n    const address = this._hash(key);\\n    const currentBucket = this.data[address];\\n    if (currentBucket) {\\n      for (let i = 0; i < currentBucket.length; i++) {\\n        if (currentBucket[i][0] === key) {\\n          return currentBucket[i][1];\\n        }\\n      }\\n    }\\n    return undefined;\\n  }\\n\\n  keys() {\\n    const keysArray = [];\\n    console.log(this.data.length);\\n    for (let i = 0; i < this.data.length; i++) {\\n      if (this.data[i]) {\\n        keysArray.push(this.data[i][0][0]);\\n      }\\n    }\\n    return keysArray;\\n  }\\n}\\n\\nconst myHashTable = new HashTable(50);\\nmyHashTable.set(\\"grapes\\", 10000);\\nmyHashTable.set(\\"grapes\\", 10000);\\nmyHashTable.get(\\"grapes\\");\\nmyHashTable.set(\\"apples\\", 9);\\nmyHashTable.get(\\"apples\\");\\nmyHashTable.keys();\\n```\\n\\n\u6700\u5f8c\uff0c\u5728 JavaScript \u9664\u4e86\u4e00\u822c\u7684`let obj = {}`\u4ee5\u5916\uff0c\u9084\u6709\u53e6\u5916\u5169\u500b\u7279\u5225\u7684 Object\uff0c\u5206\u5225\u662f`Map`\u548c`Set`\u3002\\n\\n### Object\u3001Map\u3001Set\\n\\n**Object**\\n\\nJavaScript \u7684 Object \u5728\u65b0\u589e\u6642\u662f\u6c92\u6709\u9806\u5e8f\u6027\u7684\uff0c\u4e0d\u50cf Array \u90a3\u6a23\u5f9e 0 \u958b\u59cb\uff0c\u5f80\u4e0a\u589e\u52a0\u3002\\n\\n\u53e6\u5916\uff0cObject \u88e1\u7684 prototype\uff0c\u5982`hasOwnProperty()`\u662f\u53ef\u4ee5\u88ab\u6539\u5beb\u7684\u3002\\n\\n```jsx\\nconst obj = {};\\nobj.name = \\"Nathan\\";\\nobj.hasOwnProperty = true;\\n\\nconsole.log(obj.hasOwnProperty(\\"name\\"));\\n// Error: obj.hasOwnProperty is not a function\\n```\\n\\n**Map**\\n\\n\u800c Map \u7684\u904b\u4f5c\u65b9\u5f0f\u5247\u662f\u8ddf\u4e00\u822c Object \u4e0d\u592a\u4e00\u6a23\uff0cMap \u5728 insert \u8cc7\u6599\u6642\u662f\u6709\u9806\u5e8f\u6027\u7684\uff0c\u4e26\u4e14\u4e0d\u80fd\u8986\u5beb\u4ed6\u7684 prototype\u3002\\n\\n```jsx\\nconst collection = new Map();\\n\\ncollection.set(\\"Nathan\\", \\"555-0182\\");\\ncollection[\\"size\\"] = false;\\n\\nconsole.log(collection.get(\\"size\\")); // undefined\\nconsole.log(collection.size); // 1\\n```\\n\\n**Set**\\n\\nSet \u8ddf Map \u7684\u904b\u4f5c\u65b9\u5f0f\u5f88\u50cf\uff0cinsert \u8cc7\u6599\u6642\u662f\u6709\u9806\u5e8f\u6027\u7684\uff0c\u53ea\u662f Set \u53ea\u6703\u5132\u5b58 key\uff0c\u6c92\u6709 value\u3002\\n\\nSet \u88e1\u9762\u7684 key \u7d55\u5c0d\u4e0d\u6703\u91cd\u8907\uff0c\u56e0\u6b64\u5982\u679c\u8981\u78ba\u8a8d Array \u88e1\u9762\u7684\u503c\u6709\u6c92\u6709\u91cd\u8907\uff0c\u53ef\u4ee5\u7528`Set().size`\u4f86\u6aa2\u67e5\u3002\\n\\n```jsx\\nlet a = [1, 2, 3, 3, 5];\\n\\nfunction hasDuplicate(arr) {\\n  return new Set(arr).size !== arr.length;\\n}\\n\\nhasDuplicate(a); // true\\n```\\n\\n\u4ee5\u4e0a\u5c31\u662f Hash Tables \u7684\u4ecb\u7d39\uff0c\u4ee5\u53ca\u7528 JavaScript \u4f86\u5be6\u4f5c Hash Table Class \u7684\u65b9\u5f0f\uff01\\n\\n### Pros & Cons\\n\\n- Pros\\n\\n1. Fast lookup (good collision resolution needed)\\n2. Fast inserts\\n3. Flexible keys (not only number (Array))\\n\\n- Cons\\n\\n1. Unordered\\n2. Slow key iteration (Object.keys())\\n\\n### Reference\\n\\n[Udemy - Master the Coding Interview: Data Structures + Algorithms](https://udemy.com/course/master-the-coding-interview-data-structures-algorithms/?srsltid=AfmBOooCR7IyhxoDQK1cx6-Q*sh7WOI7Q3Z1LnW005R5rxfs5cmnDXo*)"},{"id":"dsa-javascript-array","metadata":{"permalink":"/dsa-javascript-array","source":"@site/blog/2022-03-31-dsa-javascript-array.md","title":"\u7528 JavaScript \u5be6\u4f5c Array \u8cc7\u6599\u7d50\u69cb","description":"\u6b64\u7bc7\u70ba Udemy - Master the Coding Interview: Data Structures + Algorithms","date":"2022-03-31T00:00:00.000Z","tags":[{"inline":false,"label":"Data Structure and Algorithm","permalink":"/tags/data-structure-and-algorithm","description":"Data Structure and Algorithm"}],"readingTime":3.31,"hasTruncateMarker":true,"authors":[{"name":"Claudia Teng","title":"Author","imageURL":"https://github.com/Claudia-teng.png","key":"claudia","page":null}],"frontMatter":{"slug":"dsa-javascript-array","title":"\u7528 JavaScript \u5be6\u4f5c Array \u8cc7\u6599\u7d50\u69cb","authors":["claudia"],"tags":["dsa"]},"unlisted":false,"prevItem":{"title":"\u863f\u8514\u8207\u5751 \u2014\u2014 JavaScript \u7684 Hash Table \u662f\u4ec0\u9ebc\uff1f","permalink":"/dsa-javascript-hash-table"}},"content":"\u6b64\u7bc7\u70ba [Udemy - Master the Coding Interview: Data Structures + Algorithms](https://udemy.com/course/master-the-coding-interview-data-structures-algorithms/?srsltid=AfmBOooCR7IyhxoDQK1cx6-Q*sh7WOI7Q3Z1LnW005R5rxfs5cmnDXo*)\\n\u8ab2\u7a0b\u7b46\u8a18\u3002\\n\\n\u9996\u7bc7 Data Structure \u60f3\u8981\u4ecb\u7d39\u7684\u662f Array\uff0c\u5728 JavaScript \u7576\u4e2d\uff0c\u56e0\u70ba\u5df2\u7d93\u6709\u5167\u5efa\u7684 Array \u8cc7\u6599\u7d50\u69cb\uff0c\u56e0\u6b64\u5e73\u5e38\u5df2\u7d93\u7fd2\u6163`let array = [];`\u9019\u7a2e\u5beb\u6cd5\u3002\\n\\n\u4e0d\u904e JavaScript \u7684 Array \u5176\u5be6\u4e5f\u662f\u5f9e Object \u884d\u751f\u800c\u4f86\uff0c\u5982\u679c\u4eca\u5929\u5728 console \u8f38\u5165`typof []`\uff0c\u4f60\u6703\u5f97\u5230`\'object\'`\u7684\u7b54\u6848\uff0c\u539f\u56e0\u662f\u5728 JavaScript \u4e2d\uff0cArray \u7b97\u662f\u7279\u5225\u7684 Object\u3002\\n\\nArray \u8cc7\u6599\u7d50\u69cb\u5176\u5be6\u4e5f\u80fd\u900f\u904e JavaScript \u81ea\u5df1\u5be6\u4f5c\uff0c\u4ee5\u4e0b\u5c07\u6703\u793a\u7bc4\u600e\u9ebc\u900f\u904e Object \u4f86\u5be6\u4f5c Array\uff0c\u4ee5\u53ca\u81ea\u5df1\u5beb\u51fa\u4e00\u4e9b\u5e38\u898b\u7684 Array Method\u3002\\n\\n\u63a5\u4e0b\u4f86\u5c31\u4e00\u8d77\u4f86\u5be6\u4f5c\u5427\uff01\\n\\n\x3c!-- truncate --\x3e\\n\\n### Array\\n\\n\u9996\u5148\u5efa\u7acb\u4e00\u500b`Class`\u53eb\u505a MyArray\uff0c\u4e26\u5728`constructor`\u5167\u9810\u8a2d\u5169\u500b\u503c\uff1alength, data\uff0c\u4f5c\u70ba\u7a7a\u9663\u5217\u3002\\n\\n```jsx\\nclass MyArray {\\n  constructor() {\\n    this.length = 0;\\n    this.data = {};\\n  }\\n}\\n```\\n\\n\u63a5\u4e0b\u4f86\u6211\u5011\u8981\u5728 MyArray \u88e1\u9762\u52a0\u5165\u4e00\u4e9b method\uff1a\\n\\n### Get\\n\\n\u5148\u4f86\u5be6\u4f5c\u5982\u4f55\u85c9\u7531 index\uff0c\u53d6\u5f97 Array \u88e1\u76f8\u5c0d\u61c9\u7684\u503c\uff0c\u4f7f\u7528\u7684\u662f`Object[key]`\u7684\u65b9\u5f0f\u3002\\n\\n```jsx\\nget(index) {\\n  return this.data[index]\\n}\\n```\\n\\n**Big O: O(1)**\\n\\nArray \u56e0\u70ba\u6709 index\uff0c\u56e0\u6b64\u641c\u5c0b\u901f\u5ea6\u5f88\u5feb\u3002\\n\\n### Push\\n\\npush \u662f\u5728 array \u7684\u6700\u5f8c\u9762\u52a0\u4e00\u500b\u503c\uff0c\u4e26\u56de\u50b3\u6574\u500b array\uff0c\u5be6\u4f5c\u5982\u4e0b\uff1a\\n\\n```jsx\\npush(item) {\\n  this.data[this.length] = item;\\n  this.length++;\\n  return this.data;\\n}\\n```\\n\\n**Big O: O(1)**\\n\\n\u901a\u5e38\u70ba O(1)\uff0c\u53ea\u9700\u5728\u6700\u5f8c\u52a0\u4e0a\u503c\uff0c\u4e0d\u7528\u6539\u8b8a\u6574\u500b\u7d50\u69cb\u3002\u4f46 Array \u5728 RAM \u5132\u5b58\u503c\u7684\u65b9\u5f0f\u70ba\u9023\u7e8c\u7684\uff0c\u82e5 Array \u672b\u7aef\u6c92\u6709\u7a7a\u9593\u653e\u6700\u5f8c\u4e00\u500b\u503c\uff0c\u5247\u9808\u5c07\u6574\u500b Array \u642c\u79fb\u5230 RAM \u5176\u4ed6\u8655\uff0c\u6b64\u6642 Big O: O(n)\u3002\\n\\n### Pop\\n\\npop \u662f\u79fb\u9664 array \u6700\u5f8c\u4e00\u500b\u503c\uff0c\u4e26\u56de\u50b3\u88ab\u79fb\u9664\u7684\u503c\uff0c\u5be6\u4f5c\u5982\u4e0b\uff1a\\n\\n```jsx\\npop() {\\n  const lastItem = this.data[this.length - 1];\\n  delete this.data[this.length - 1];\\n  this.length--;\\n  return lastItem;\\n}\\n```\\n\\n\u9019\u88e1\u4f7f\u7528\u5230\u7684\u662f Object \u7684\u522a\u9664\u65b9\u5f0f`delete Object[key]`\u3002\\n\\n**Big O: O(1)**\\n\\n\u53ea\u9700\u79fb\u9664\u6700\u5f8c\u4e00\u500b\u503c\uff0c\u4e0d\u7528\u6539\u8b8a\u5176\u4ed6\u7d50\u69cb\u3002\\n\\n### Delete\\n\\n\u6700\u5f8c\u4f86\u5be6\u4f5c\u5982\u4f55\u79fb\u9664 Array \u4e2d\u7279\u5b9a index \u7684\u503c\uff0c\u4e26\u56de\u50b3\u88ab\u79fb\u9664\u7684\u503c\u3002\\n\\n\u9019\u908a\u5be6\u4f5c\u7684\u65b9\u6cd5\u662f\uff0c\u5c07\u7d66\u4e88\u7684 index \u503c\u63db\u6210 index+1 \u7684\u503c\u3002\\n\\n\u4f8b\u5982\uff1a\\n\\n```jsx\\nlet array = [45, 26, 33, 42, 55];\\n// index      0   1   2   3   4\\n```\\n\\n\u82e5\u6211\u4eca\u5929\u60f3\u79fb\u9664 index 3 (\u503c\u70ba 42)\uff0c\u6211\u5fc5\u9808\u5c07 index 3 \u6240\u5c0d\u61c9\u7684\u503c\u63db\u70ba 55 (\u4e5f\u5c31\u662f\u539f\u672c\u7684 index 4)\uff0c\u5c07\u5f8c\u9762\u4e00\u500b\u66ff\u88dc\u4e0a\u53bb\u7684\u610f\u601d\u3002\\n\\n```jsx\\nlet array = [45, 26, 33, 42, 55];\\n// index      0   1   2   3   4\\n```\\n\\n\u800c\u79fb\u9664\u5f8c\u4e5f\u8981\u8a18\u5f97\u5c07\u6700\u5f8c\u4e00\u500b\u503c\u522a\u9664\u3002\\n\\n```jsx\\nlet array = [45, 26, 33, 55];\\n// index     0   1   2   3\\n```\\n\\n\u5be6\u4f5c\u5982\u4e0b\uff1a\\n\\n```jsx\\ndeleteAtIndex(index) {\\n  const item = this.data[index];\\n  for (let i = index; i < this.length - 1; i++) {\\n    // this.length - 1 \u662f\u56e0\u70baarray\u6700\u5f8c\u4e00\u500bindex\u4e0d\u7528\u505a\u66ff\u88dc\u7684\u52d5\u4f5c\\n    this.data[i] = this.data[i + 1];\\n  }\\n  // \u522a\u9664\u6700\u5f8c\u4e00\u500b\\n  delete this.data[this.length - 1];\\n  this.length--\\n  return item;\\n}\\n```\\n\\n\u6216\u662f\u6bd4\u8f03\u7c21\u6f54\u7684\u5beb\u6cd5\uff0c\u628a\u4e2d\u9593\u7684\u904e\u7a0b\u79fb\u51fa\u4f86\u8b8a\u6210\u4e00\u500b function\u3002\\n\\n```jsx\\ndeleteAtIndex(index) {\\n  const item = this.data[index];\\n  this.shiftItems(index);\\n  return item;\\n}\\n\\nshiftItems(index) {\\n  for (let i = index; i < this.length - 1; i++) {\\n    this.data[i] = this.data[i + 1];\\n  }\\n  delete this.data[this.length - 1];\\n  this.length--;\\n}\\n\\n```\\n\\n**Big O: O(n)**\\n\\nindex \u4e4b\u5f8c\u7684\u7d50\u69cb\u90fd\u6703\u6539\u8b8a\uff0c\u53c8\u56e0 Big O \u8003\u616e\u7684\u662f\u6700\u5dee\u60c5\u6cc1\uff0c\u82e5 index = 0\uff0c\u6574\u500b Array \u7d50\u69cb\u90fd\u9808\u6539\u8b8a\uff0c\u56e0\u6b64\u70ba O(n)\u3002\\n\\n\u6700\u5f8c\u5373\u53ef\u547c\u53eb MyClass \u7684 method\uff1a\\n\\n```jsx\\nconst myArray = new MyArray();\\n\\nmyArray.push(\\"Hellooo\\");\\nmyArray.push(\\",\\");\\nmyArray.push(\\"Nice\\");\\nmyArray.push(\\"to\\");\\nmyArray.push(\\"meet\\");\\nmyArray.push(\\"you\\");\\nmyArray.pop();\\nmyArray.deleteAtIndex(0);\\nmyArray.push(\\"!\\");\\nmyArray.shiftItems(0);\\n```\\n\\n\u4ee5\u4e0a\u5c31\u662f\u81ea\u5df1\u7528 JavaScript Object \u5be6\u4f5c Array \u8cc7\u6599\u7d50\u69cb\uff0c\u548c\u4e00\u4e9b\u7c21\u55ae\u7684 method \u7684\u65b9\u5f0f\uff01\\n\\n### Pros & Cons\\n\\n- Pros\\n\\n1.  Good at having sorted data (ordered)\\n2.  Fast lookup\\n3.  Fast push/pop\\n\\n- Cons\\n\\n1.  Slow Search (find value) O(n)\\n2.  Slow inserts O(n)\\n3.  Slow deletes O(n)\\n\\n### Reference\\n\\n[Udemy - Master the Coding Interview: Data Structures + Algorithms](https://udemy.com/course/master-the-coding-interview-data-structures-algorithms/?srsltid=AfmBOooCR7IyhxoDQK1cx6-Q*sh7WOI7Q3Z1LnW005R5rxfs5cmnDXo*)"}]}}')}}]);